
actividad4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000e22  00000eb6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800104  00800104  00000eba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000eba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000eec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00000f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a77  00000000  00000000  000010cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bb5  00000000  00000000  00002b43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e0a  00000000  00000000  000036f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f0  00000000  00000000  00004504  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000068d  00000000  00000000  000048f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c2f  00000000  00000000  00004f81  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00005bb0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 31 02 	jmp	0x462	; 0x462 <__ctors_end>
   4:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
   8:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
   c:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  10:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  14:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  18:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  1c:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  20:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  24:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  28:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  2c:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  30:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  34:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  38:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  3c:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  40:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  44:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  48:	0c 94 d5 02 	jmp	0x5aa	; 0x5aa <__vector_18>
  4c:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  50:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  54:	0c 94 50 02 	jmp	0x4a0	; 0x4a0 <__vector_21>
  58:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  5c:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  60:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>
  64:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <dtoa_prf+0x76>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <main+0x4>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <myFont+0x27e>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <myFont+0x2a>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <myFont+0x6c>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <myFont>:
	...
 16a:	00 00 5f 00 00 00 00 00 00 00 07 00 07 00 00 00     .._.............
 17a:	00 14 7f 14 7f 14 00 00 00 24 2a 7f 2a 12 00 00     .........$*.*...
 18a:	00 23 13 08 64 62 00 00 00 36 49 55 22 50 00 00     .#..db...6IU"P..
 19a:	00 00 05 03 00 00 00 00 00 1c 22 41 00 00 00 00     .........."A....
 1aa:	00 41 22 1c 00 00 00 00 00 08 2a 1c 2a 08 00 00     .A".......*.*...
 1ba:	00 08 08 3e 08 08 00 00 00 a0 60 00 00 00 00 00     ...>......`.....
 1ca:	00 08 08 08 08 08 00 00 00 60 60 00 00 00 00 00     .........``.....
 1da:	00 20 10 08 04 02 00 00 00 3e 51 49 45 3e 00 00     . .......>QIE>..
 1ea:	00 00 42 7f 40 00 00 00 00 62 51 49 49 46 00 00     ..B.@....bQIIF..
 1fa:	00 22 41 49 49 36 00 00 00 18 14 12 7f 10 00 00     ."AII6..........
 20a:	00 27 45 45 45 39 00 00 00 3c 4a 49 49 30 00 00     .'EEE9...<JII0..
 21a:	00 01 71 09 05 03 00 00 00 36 49 49 49 36 00 00     ..q......6III6..
 22a:	00 06 49 49 29 1e 00 00 00 00 36 36 00 00 00 00     ..II).....66....
 23a:	00 00 ac 6c 00 00 00 00 00 08 14 22 41 00 00 00     ...l......."A...
 24a:	00 14 14 14 14 14 00 00 00 41 22 14 08 00 00 00     .........A".....
 25a:	00 02 01 51 09 06 00 00 00 32 49 79 41 3e 00 00     ...Q.....2IyA>..
 26a:	00 7e 09 09 09 7e 00 00 00 7f 49 49 49 36 00 00     .~...~....III6..
 27a:	00 3e 41 41 41 22 00 00 00 7f 41 41 22 1c 00 00     .>AAA"....AA"...
 28a:	00 7f 49 49 49 41 00 00 00 7f 09 09 09 01 00 00     ..IIIA..........
 29a:	00 3e 41 41 51 72 00 00 00 7f 08 08 08 7f 00 00     .>AAQr..........
 2aa:	00 41 7f 41 00 00 00 00 00 20 40 41 3f 01 00 00     .A.A..... @A?...
 2ba:	00 7f 08 14 22 41 00 00 00 7f 40 40 40 40 00 00     ...."A....@@@@..
 2ca:	00 7f 02 0c 02 7f 00 00 00 7f 04 08 10 7f 00 00     ................
 2da:	00 3e 41 41 41 3e 00 00 00 7f 09 09 09 06 00 00     .>AAA>..........
 2ea:	00 3e 41 51 21 5e 00 00 00 7f 09 19 29 46 00 00     .>AQ!^......)F..
 2fa:	00 26 49 49 49 32 00 00 00 01 01 7f 01 01 00 00     .&III2..........
 30a:	00 3f 40 40 40 3f 00 00 00 1f 20 40 20 1f 00 00     .?@@@?.... @ ...
 31a:	00 3f 40 38 40 3f 00 00 00 63 14 08 14 63 00 00     .?@8@?...c...c..
 32a:	00 03 04 78 04 03 00 00 00 61 51 49 45 43 00 00     ...x.....aQIEC..
 33a:	00 7f 41 41 00 00 00 00 00 02 04 08 10 20 00 00     ..AA......... ..
 34a:	00 41 41 7f 00 00 00 00 00 04 02 01 02 04 00 00     .AA.............
 35a:	00 80 80 80 80 80 00 00 00 01 02 04 00 00 00 00     ................
 36a:	00 20 54 54 54 78 00 00 00 7f 48 44 44 38 00 00     . TTTx....HDD8..
 37a:	00 38 44 44 28 00 00 00 00 38 44 44 48 7f 00 00     .8DD(....8DDH...
 38a:	00 38 54 54 54 18 00 00 00 08 7e 09 02 00 00 00     .8TTT.....~.....
 39a:	00 18 a4 a4 a4 7c 00 00 00 7f 08 04 04 78 00 00     .....|.......x..
 3aa:	00 00 7d 00 00 00 00 00 00 80 84 7d 00 00 00 00     ..}........}....
 3ba:	00 7f 10 28 44 00 00 00 00 41 7f 40 00 00 00 00     ...(D....A.@....
 3ca:	00 7c 04 18 04 78 00 00 00 7c 08 04 7c 00 00 00     .|...x...|..|...
 3da:	00 38 44 44 38 00 00 00 00 fc 24 24 18 00 00 00     .8DD8.....$$....
 3ea:	00 18 24 24 fc 00 00 00 00 00 7c 08 04 00 00 00     ..$$......|.....
 3fa:	00 48 54 54 24 00 00 00 00 04 7f 44 00 00 00 00     .HTT$......D....
 40a:	00 3c 40 40 7c 00 00 00 00 1c 20 40 20 1c 00 00     .<@@|..... @ ...
 41a:	00 3c 40 30 40 3c 00 00 00 44 28 10 28 44 00 00     .<@0@<...D(.(D..
 42a:	00 1c a0 a0 7c 00 00 00 00 44 64 54 4c 44 00 00     ....|....DdTLD..
 43a:	00 08 36 41 00 00 00 00 00 00 7f 00 00 00 00 00     ..6A............
 44a:	00 41 36 08 00 00 00 00 00 02 01 01 02 01 00 00     .A6.............
 45a:	00 02 05 05 02 00 00 00                             ........

00000462 <__ctors_end>:
 462:	11 24       	eor	r1, r1
 464:	1f be       	out	0x3f, r1	; 63
 466:	cf ef       	ldi	r28, 0xFF	; 255
 468:	d8 e0       	ldi	r29, 0x08	; 8
 46a:	de bf       	out	0x3e, r29	; 62
 46c:	cd bf       	out	0x3d, r28	; 61

0000046e <__do_copy_data>:
 46e:	11 e0       	ldi	r17, 0x01	; 1
 470:	a0 e0       	ldi	r26, 0x00	; 0
 472:	b1 e0       	ldi	r27, 0x01	; 1
 474:	e2 e2       	ldi	r30, 0x22	; 34
 476:	fe e0       	ldi	r31, 0x0E	; 14
 478:	02 c0       	rjmp	.+4      	; 0x47e <__do_copy_data+0x10>
 47a:	05 90       	lpm	r0, Z+
 47c:	0d 92       	st	X+, r0
 47e:	a4 30       	cpi	r26, 0x04	; 4
 480:	b1 07       	cpc	r27, r17
 482:	d9 f7       	brne	.-10     	; 0x47a <__do_copy_data+0xc>

00000484 <__do_clear_bss>:
 484:	21 e0       	ldi	r18, 0x01	; 1
 486:	a4 e0       	ldi	r26, 0x04	; 4
 488:	b1 e0       	ldi	r27, 0x01	; 1
 48a:	01 c0       	rjmp	.+2      	; 0x48e <.do_clear_bss_start>

0000048c <.do_clear_bss_loop>:
 48c:	1d 92       	st	X+, r1

0000048e <.do_clear_bss_start>:
 48e:	a5 30       	cpi	r26, 0x05	; 5
 490:	b2 07       	cpc	r27, r18
 492:	e1 f7       	brne	.-8      	; 0x48c <.do_clear_bss_loop>
 494:	0e 94 55 03 	call	0x6aa	; 0x6aa <main>
 498:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <_exit>

0000049c <__bad_interrupt>:
 49c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000004a0 <__vector_21>:
	ADCSRA|=(1<<ADIF);				//clear flag for next conversion
	return(ADC);					//return sample value
}

ISR (ADC_vect)
{
 4a0:	1f 92       	push	r1
 4a2:	0f 92       	push	r0
 4a4:	0f b6       	in	r0, 0x3f	; 63
 4a6:	0f 92       	push	r0
 4a8:	11 24       	eor	r1, r1
 4aa:	0f 93       	push	r16
 4ac:	1f 93       	push	r17
 4ae:	2f 93       	push	r18
 4b0:	3f 93       	push	r19
 4b2:	4f 93       	push	r20
 4b4:	5f 93       	push	r21
 4b6:	6f 93       	push	r22
 4b8:	7f 93       	push	r23
 4ba:	8f 93       	push	r24
 4bc:	9f 93       	push	r25
 4be:	af 93       	push	r26
 4c0:	bf 93       	push	r27
 4c2:	ef 93       	push	r30
 4c4:	ff 93       	push	r31
 4c6:	cf 93       	push	r28
 4c8:	df 93       	push	r29
 4ca:	cd b7       	in	r28, 0x3d	; 61
 4cc:	de b7       	in	r29, 0x3e	; 62
 4ce:	2a 97       	sbiw	r28, 0x0a	; 10
 4d0:	de bf       	out	0x3e, r29	; 62
 4d2:	cd bf       	out	0x3d, r28	; 61
	uint8_t LowPart = ADCL;	//10-bit resolution
 4d4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
	uint16_t TenBitResult = ADCH << 2 | LowPart >> 6;
 4d8:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	22 0f       	add	r18, r18
 4e0:	33 1f       	adc	r19, r19
 4e2:	22 0f       	add	r18, r18
 4e4:	33 1f       	adc	r19, r19
 4e6:	82 95       	swap	r24
 4e8:	86 95       	lsr	r24
 4ea:	86 95       	lsr	r24
 4ec:	83 70       	andi	r24, 0x03	; 3
 4ee:	28 2b       	or	r18, r24
		
	//Example:reading sensor output on oled
	char ascii_temp [10];
	float temp = (TenBitResult*150/307);
 4f0:	46 e9       	ldi	r20, 0x96	; 150
 4f2:	42 9f       	mul	r20, r18
 4f4:	c0 01       	movw	r24, r0
 4f6:	43 9f       	mul	r20, r19
 4f8:	90 0d       	add	r25, r0
 4fa:	11 24       	eor	r1, r1
 4fc:	63 e3       	ldi	r22, 0x33	; 51
 4fe:	71 e0       	ldi	r23, 0x01	; 1
 500:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__udivmodhi4>
 504:	80 e0       	ldi	r24, 0x00	; 0
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	0e 94 35 04 	call	0x86a	; 0x86a <__floatunsisf>
	//Celsius degree conversion
	//LM35 output=1.5v for 150 degrees
	//then: 5v   -> 1023
	//		1.5v -> x
	// x=((1.5v)*(1023))/5v=306.9
	dtostrf(temp, 4, 1, ascii_temp);
 50c:	8e 01       	movw	r16, r28
 50e:	0f 5f       	subi	r16, 0xFF	; 255
 510:	1f 4f       	sbci	r17, 0xFF	; 255
 512:	21 e0       	ldi	r18, 0x01	; 1
 514:	44 e0       	ldi	r20, 0x04	; 4
 516:	0e 94 86 04 	call	0x90c	; 0x90c <dtostrf>
	//4 integers, 1 decimals
	init_i2c();
 51a:	0e 94 08 03 	call	0x610	; 0x610 <init_i2c>
	InitializeDisplay();
 51e:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <InitializeDisplay>
	clear_display();
 522:	0e 94 c3 03 	call	0x786	; 0x786 <clear_display>
	
	setXY(5,2);
 526:	62 e0       	ldi	r22, 0x02	; 2
 528:	85 e0       	ldi	r24, 0x05	; 5
 52a:	0e 94 ad 03 	call	0x75a	; 0x75a <setXY>
	sendStr(ascii_temp);
 52e:	c8 01       	movw	r24, r16
 530:	0e 94 8b 03 	call	0x716	; 0x716 <sendStr>
	//SendChar(0xDF); //degrees character
	sendStr(" C");
 534:	81 e0       	ldi	r24, 0x01	; 1
 536:	91 e0       	ldi	r25, 0x01	; 1
 538:	0e 94 8b 03 	call	0x716	; 0x716 <sendStr>
	//start another conversion
	ADCSRA |= 1<<ADSC;
 53c:	ea e7       	ldi	r30, 0x7A	; 122
 53e:	f0 e0       	ldi	r31, 0x00	; 0
 540:	80 81       	ld	r24, Z
 542:	80 64       	ori	r24, 0x40	; 64
 544:	80 83       	st	Z, r24
}
 546:	2a 96       	adiw	r28, 0x0a	; 10
 548:	0f b6       	in	r0, 0x3f	; 63
 54a:	f8 94       	cli
 54c:	de bf       	out	0x3e, r29	; 62
 54e:	0f be       	out	0x3f, r0	; 63
 550:	cd bf       	out	0x3d, r28	; 61
 552:	df 91       	pop	r29
 554:	cf 91       	pop	r28
 556:	ff 91       	pop	r31
 558:	ef 91       	pop	r30
 55a:	bf 91       	pop	r27
 55c:	af 91       	pop	r26
 55e:	9f 91       	pop	r25
 560:	8f 91       	pop	r24
 562:	7f 91       	pop	r23
 564:	6f 91       	pop	r22
 566:	5f 91       	pop	r21
 568:	4f 91       	pop	r20
 56a:	3f 91       	pop	r19
 56c:	2f 91       	pop	r18
 56e:	1f 91       	pop	r17
 570:	0f 91       	pop	r16
 572:	0f 90       	pop	r0
 574:	0f be       	out	0x3f, r0	; 63
 576:	0f 90       	pop	r0
 578:	1f 90       	pop	r1
 57a:	18 95       	reti

0000057c <init_adc_withINT>:

void init_adc_withINT(void)
{
	ADCSRA |=(1 << ADEN);	//enable adc
 57c:	ea e7       	ldi	r30, 0x7A	; 122
 57e:	f0 e0       	ldi	r31, 0x00	; 0
 580:	80 81       	ld	r24, Z
 582:	80 68       	ori	r24, 0x80	; 128
 584:	80 83       	st	Z, r24
	ADCSRA |=(1 << ADPS2)|(1 << ADPS1)|(1 << ADPS0); // activate prescaler fo=16,000,000Hz/128~125KHz
 586:	80 81       	ld	r24, Z
 588:	87 60       	ori	r24, 0x07	; 7
 58a:	80 83       	st	Z, r24
	ADMUX |=(1 << ADLAR);	//left justified (ADCH bit9-2, ADCL bit1-0)
 58c:	ac e7       	ldi	r26, 0x7C	; 124
 58e:	b0 e0       	ldi	r27, 0x00	; 0
 590:	8c 91       	ld	r24, X
 592:	80 62       	ori	r24, 0x20	; 32
 594:	8c 93       	st	X, r24
	//ADMUX |=(1 << MUX0);	//Selects ADC channel (0-5)
	ADMUX |=(1 << REFS0);	//Selects Vref(pag 257)//AVcc= 5v & Aref= with capacitor to GND
 596:	8c 91       	ld	r24, X
 598:	80 64       	ori	r24, 0x40	; 64
 59a:	8c 93       	st	X, r24
	ADCSRA |= 1 << ADIE;	//enable ADC interrupts
 59c:	80 81       	ld	r24, Z
 59e:	88 60       	ori	r24, 0x08	; 8
 5a0:	80 83       	st	Z, r24
	ADCSRA |= 1 << ADSC;	//start conversion
 5a2:	80 81       	ld	r24, Z
 5a4:	80 64       	ori	r24, 0x40	; 64
 5a6:	80 83       	st	Z, r24
 5a8:	08 95       	ret

000005aa <__vector_18>:
  while (i < 64)
  {
	  if (s[i] == '\0') break;
	  usart_transmit(s[i++]);
  }
}
 5aa:	1f 92       	push	r1
 5ac:	0f 92       	push	r0
 5ae:	0f b6       	in	r0, 0x3f	; 63
 5b0:	0f 92       	push	r0
 5b2:	11 24       	eor	r1, r1
 5b4:	8f 93       	push	r24
 5b6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 5ba:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 5be:	80 ef       	ldi	r24, 0xF0	; 240
 5c0:	8a b9       	out	0x0a, r24	; 10
 5c2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 5c6:	81 11       	cpse	r24, r1
 5c8:	04 c0       	rjmp	.+8      	; 0x5d2 <__vector_18+0x28>
 5ca:	8b b1       	in	r24, 0x0b	; 11
 5cc:	80 61       	ori	r24, 0x10	; 16
 5ce:	8b b9       	out	0x0b, r24	; 11
 5d0:	03 c0       	rjmp	.+6      	; 0x5d8 <__vector_18+0x2e>
 5d2:	8b b1       	in	r24, 0x0b	; 11
 5d4:	80 67       	ori	r24, 0x70	; 112
 5d6:	8b b9       	out	0x0b, r24	; 11
 5d8:	8f 91       	pop	r24
 5da:	0f 90       	pop	r0
 5dc:	0f be       	out	0x3f, r0	; 63
 5de:	0f 90       	pop	r0
 5e0:	1f 90       	pop	r1
 5e2:	18 95       	reti

000005e4 <init_usart>:

void init_usart(unsigned int baudrate)
{
	UCSR0C &= (~(1<<UMSEL00) & ~(1<<UMSEL01)); // bit UMSEL = 0 asyncronous mode	
 5e4:	e2 ec       	ldi	r30, 0xC2	; 194
 5e6:	f0 e0       	ldi	r31, 0x00	; 0
 5e8:	20 81       	ld	r18, Z
 5ea:	2f 73       	andi	r18, 0x3F	; 63
 5ec:	20 83       	st	Z, r18
	UCSR0A = (1<<U2X0); // bit U2X = 1 double speed
 5ee:	22 e0       	ldi	r18, 0x02	; 2
 5f0:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
	//Baudrate:fosc=16Mhz,U2Xn=1,BaudRate=9600, then UBRR= 207 (DS pag.199)
	UBRR0H = (unsigned char) (baudrate>>8); // write(MSB)
 5f4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char) (baudrate);	//write(LSB)
 5f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0C = ((1<<UCSZ00) | (1<<UCSZ01)); //8 bits data lenght
 5fc:	86 e0       	ldi	r24, 0x06	; 6
 5fe:	80 83       	st	Z, r24
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);	//enable transmitter & receiver
 600:	e1 ec       	ldi	r30, 0xC1	; 193
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	88 e1       	ldi	r24, 0x18	; 24
 606:	80 83       	st	Z, r24
	//UCSRC = (1<<USBS);	//2 stop bits
	UCSR0B |= (1<<RXCIE0);	//enable reception complete (RXCIE0=1) interrupts
 608:	80 81       	ld	r24, Z
 60a:	80 68       	ori	r24, 0x80	; 128
 60c:	80 83       	st	Z, r24
 60e:	08 95       	ret

00000610 <init_i2c>:
	return 1;			/* Return 1 to indicate ack received */
	if(status==0x20)		/* Check for SLA+R transmitted &nack received */
	return 2;			/* Return 2 to indicate nack received */
	else
	return 3;			/* Else return 3 to indicate SLA+W failed */
}
 610:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 614:	84 e1       	ldi	r24, 0x14	; 20
 616:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 61a:	84 e0       	ldi	r24, 0x04	; 4
 61c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 620:	08 95       	ret

00000622 <stop_i2c>:
 622:	84 e9       	ldi	r24, 0x94	; 148
 624:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 628:	8f e9       	ldi	r24, 0x9F	; 159
 62a:	9f e0       	ldi	r25, 0x0F	; 15
 62c:	01 97       	sbiw	r24, 0x01	; 1
 62e:	f1 f7       	brne	.-4      	; 0x62c <stop_i2c+0xa>
 630:	00 c0       	rjmp	.+0      	; 0x632 <stop_i2c+0x10>
 632:	00 00       	nop
 634:	08 95       	ret

00000636 <I2C_Start>:
 636:	94 ea       	ldi	r25, 0xA4	; 164
 638:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 63c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 640:	99 23       	and	r25, r25
 642:	e4 f7       	brge	.-8      	; 0x63c <I2C_Start+0x6>
 644:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 648:	98 7f       	andi	r25, 0xF8	; 248
 64a:	98 30       	cpi	r25, 0x08	; 8
 64c:	91 f4       	brne	.+36     	; 0x672 <I2C_Start+0x3c>
 64e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 652:	84 e8       	ldi	r24, 0x84	; 132
 654:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 658:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 65c:	88 23       	and	r24, r24
 65e:	e4 f7       	brge	.-8      	; 0x658 <I2C_Start+0x22>
 660:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 664:	88 7f       	andi	r24, 0xF8	; 248
 666:	88 31       	cpi	r24, 0x18	; 24
 668:	31 f0       	breq	.+12     	; 0x676 <I2C_Start+0x40>
 66a:	80 32       	cpi	r24, 0x20	; 32
 66c:	31 f4       	brne	.+12     	; 0x67a <I2C_Start+0x44>
 66e:	82 e0       	ldi	r24, 0x02	; 2
 670:	08 95       	ret
 672:	80 e0       	ldi	r24, 0x00	; 0
 674:	08 95       	ret
 676:	81 e0       	ldi	r24, 0x01	; 1
 678:	08 95       	ret
 67a:	83 e0       	ldi	r24, 0x03	; 3
 67c:	08 95       	ret

0000067e <I2C_Write>:
uint8_t I2C_Write(char data)	/* I2C write function */
{
	uint8_t status;		/* Declare variable */
	TWDR=data;			/* Copy data in TWI data register */
 67e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
 682:	84 e8       	ldi	r24, 0x84	; 132
 684:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
 688:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 68c:	88 23       	and	r24, r24
 68e:	e4 f7       	brge	.-8      	; 0x688 <I2C_Write+0xa>
	status=TWSR&0xF8;		/* Read TWI status register */
 690:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 694:	88 7f       	andi	r24, 0xF8	; 248
	if(status==0x28)		/* Check for data transmitted &ack received */
 696:	88 32       	cpi	r24, 0x28	; 40
 698:	21 f0       	breq	.+8      	; 0x6a2 <I2C_Write+0x24>
	return 0;			/* Return 0 to indicate ack received */
	if(status==0x30)		/* Check for data transmitted &nack received */
 69a:	80 33       	cpi	r24, 0x30	; 48
 69c:	21 f4       	brne	.+8      	; 0x6a6 <I2C_Write+0x28>
	return 1;			/* Return 1 to indicate nack received */
 69e:	81 e0       	ldi	r24, 0x01	; 1
 6a0:	08 95       	ret
	TWDR=data;			/* Copy data in TWI data register */
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
	status=TWSR&0xF8;		/* Read TWI status register */
	if(status==0x28)		/* Check for data transmitted &ack received */
	return 0;			/* Return 0 to indicate ack received */
 6a2:	80 e0       	ldi	r24, 0x00	; 0
 6a4:	08 95       	ret
	if(status==0x30)		/* Check for data transmitted &nack received */
	return 1;			/* Return 1 to indicate nack received */
	else
	return 2;			/* Else return 2 for data transmission failure */
 6a6:	82 e0       	ldi	r24, 0x02	; 2
}
 6a8:	08 95       	ret

000006aa <main>:


int main(void)
{
	
	init_i2c();
 6aa:	0e 94 08 03 	call	0x610	; 0x610 <init_i2c>
	InitializeDisplay();
 6ae:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <InitializeDisplay>
	reset_display();
 6b2:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <reset_display>
	init_adc_withINT();
 6b6:	0e 94 be 02 	call	0x57c	; 0x57c <init_adc_withINT>
	init_usart(207);
 6ba:	8f ec       	ldi	r24, 0xCF	; 207
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <init_usart>
	sei();
 6c2:	78 94       	sei
 6c4:	ff cf       	rjmp	.-2      	; 0x6c4 <main+0x1a>

000006c6 <ssd1306_command>:
	setXY(2,0);              // Set cursor position, start of line 2
	sendStr("FEIC");
	setXY(2,10);             // Set cursor position, line 2 10th character
	sendStr("XXX");
	setXY(3,10);             // Set cursor position, line 2 10th character
	sendStr("TEST");
 6c6:	cf 93       	push	r28
 6c8:	c8 2f       	mov	r28, r24
 6ca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6ce:	0e 94 1b 03 	call	0x636	; 0x636 <I2C_Start>
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	0e 94 3f 03 	call	0x67e	; 0x67e <I2C_Write>
 6d8:	8c 2f       	mov	r24, r28
 6da:	0e 94 3f 03 	call	0x67e	; 0x67e <I2C_Write>
 6de:	0e 94 11 03 	call	0x622	; 0x622 <stop_i2c>
 6e2:	cf 91       	pop	r28
 6e4:	08 95       	ret

000006e6 <displayOn>:
 6e6:	8f ea       	ldi	r24, 0xAF	; 175
 6e8:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
 6ec:	08 95       	ret

000006ee <displayOff>:
 6ee:	8e ea       	ldi	r24, 0xAE	; 174
 6f0:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
 6f4:	08 95       	ret

000006f6 <SendChar>:
 6f6:	cf 93       	push	r28
 6f8:	c8 2f       	mov	r28, r24
 6fa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6fe:	0e 94 1b 03 	call	0x636	; 0x636 <I2C_Start>
 702:	80 e4       	ldi	r24, 0x40	; 64
 704:	0e 94 3f 03 	call	0x67e	; 0x67e <I2C_Write>
 708:	8c 2f       	mov	r24, r28
 70a:	0e 94 3f 03 	call	0x67e	; 0x67e <I2C_Write>
 70e:	0e 94 11 03 	call	0x622	; 0x622 <stop_i2c>
 712:	cf 91       	pop	r28
 714:	08 95       	ret

00000716 <sendStr>:
 716:	1f 93       	push	r17
 718:	cf 93       	push	r28
 71a:	df 93       	push	r29
 71c:	ec 01       	movw	r28, r24
 71e:	16 c0       	rjmp	.+44     	; 0x74c <sendStr+0x36>
 720:	e8 81       	ld	r30, Y
 722:	f0 e0       	ldi	r31, 0x00	; 0
 724:	b0 97       	sbiw	r30, 0x20	; 32
 726:	ee 0f       	add	r30, r30
 728:	ff 1f       	adc	r31, r31
 72a:	ee 0f       	add	r30, r30
 72c:	ff 1f       	adc	r31, r31
 72e:	ee 0f       	add	r30, r30
 730:	ff 1f       	adc	r31, r31
 732:	ee 59       	subi	r30, 0x9E	; 158
 734:	fe 4f       	sbci	r31, 0xFE	; 254
 736:	e1 0f       	add	r30, r17
 738:	f1 1d       	adc	r31, r1
 73a:	84 91       	lpm	r24, Z
 73c:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <SendChar>
 740:	1f 5f       	subi	r17, 0xFF	; 255
 742:	01 c0       	rjmp	.+2      	; 0x746 <sendStr+0x30>
 744:	10 e0       	ldi	r17, 0x00	; 0
 746:	18 30       	cpi	r17, 0x08	; 8
 748:	58 f3       	brcs	.-42     	; 0x720 <sendStr+0xa>
 74a:	21 96       	adiw	r28, 0x01	; 1
 74c:	88 81       	ld	r24, Y
 74e:	81 11       	cpse	r24, r1
 750:	f9 cf       	rjmp	.-14     	; 0x744 <sendStr+0x2e>
 752:	df 91       	pop	r29
 754:	cf 91       	pop	r28
 756:	1f 91       	pop	r17
 758:	08 95       	ret

0000075a <setXY>:
 75a:	cf 93       	push	r28
 75c:	c6 2f       	mov	r28, r22
 75e:	80 55       	subi	r24, 0x50	; 80
 760:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
 764:	8c 2f       	mov	r24, r28
 766:	88 0f       	add	r24, r24
 768:	88 0f       	add	r24, r24
 76a:	88 0f       	add	r24, r24
 76c:	88 70       	andi	r24, 0x08	; 8
 76e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
 772:	8c 2f       	mov	r24, r28
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	96 95       	lsr	r25
 778:	87 95       	ror	r24
 77a:	8f 70       	andi	r24, 0x0F	; 15
 77c:	80 5f       	subi	r24, 0xF0	; 240
 77e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
 782:	cf 91       	pop	r28
 784:	08 95       	ret

00000786 <clear_display>:
 786:	cf 93       	push	r28
 788:	df 93       	push	r29
 78a:	d0 e0       	ldi	r29, 0x00	; 0
 78c:	0d c0       	rjmp	.+26     	; 0x7a8 <clear_display+0x22>
 78e:	60 e0       	ldi	r22, 0x00	; 0
 790:	8d 2f       	mov	r24, r29
 792:	0e 94 ad 03 	call	0x75a	; 0x75a <setXY>
 796:	c0 e0       	ldi	r28, 0x00	; 0
 798:	04 c0       	rjmp	.+8      	; 0x7a2 <clear_display+0x1c>
 79a:	80 e0       	ldi	r24, 0x00	; 0
 79c:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <SendChar>
 7a0:	cf 5f       	subi	r28, 0xFF	; 255
 7a2:	cc 23       	and	r28, r28
 7a4:	d4 f7       	brge	.-12     	; 0x79a <clear_display+0x14>
 7a6:	df 5f       	subi	r29, 0xFF	; 255
 7a8:	d8 30       	cpi	r29, 0x08	; 8
 7aa:	88 f3       	brcs	.-30     	; 0x78e <clear_display+0x8>
 7ac:	df 91       	pop	r29
 7ae:	cf 91       	pop	r28
 7b0:	08 95       	ret

000007b2 <reset_display>:
 7b2:	0e 94 77 03 	call	0x6ee	; 0x6ee <displayOff>
 7b6:	0e 94 c3 03 	call	0x786	; 0x786 <clear_display>
 7ba:	0e 94 73 03 	call	0x6e6	; 0x6e6 <displayOn>
 7be:	08 95       	ret

000007c0 <InitializeDisplay>:
}
void  InitializeDisplay()
{
	DDRC|=(1<<PINC4)|(1<<PINC5);
 7c0:	87 b1       	in	r24, 0x07	; 7
 7c2:	80 63       	ori	r24, 0x30	; 48
 7c4:	87 b9       	out	0x07, r24	; 7
	PORTC|=(1<<PINC4)|(1<<PINC5);
 7c6:	88 b1       	in	r24, 0x08	; 8
 7c8:	80 63       	ori	r24, 0x30	; 48
 7ca:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7cc:	2f ef       	ldi	r18, 0xFF	; 255
 7ce:	81 ee       	ldi	r24, 0xE1	; 225
 7d0:	94 e0       	ldi	r25, 0x04	; 4
 7d2:	21 50       	subi	r18, 0x01	; 1
 7d4:	80 40       	sbci	r24, 0x00	; 0
 7d6:	90 40       	sbci	r25, 0x00	; 0
 7d8:	e1 f7       	brne	.-8      	; 0x7d2 <InitializeDisplay+0x12>
 7da:	00 c0       	rjmp	.+0      	; 0x7dc <InitializeDisplay+0x1c>
 7dc:	00 00       	nop
	_delay_ms(100);
	// Init sequence for 128x64 OLED module
	ssd1306_command(SSD1306_DISPLAYOFF);			// 0xAE
 7de:	8e ea       	ldi	r24, 0xAE	; 174
 7e0:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_SETDISPLAYCLOCKDIV);	// 0xD5
 7e4:	85 ed       	ldi	r24, 0xD5	; 213
 7e6:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(0x80);							// the suggested ratio 0x80
 7ea:	80 e8       	ldi	r24, 0x80	; 128
 7ec:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_SETMULTIPLEX);			// 0xA8
 7f0:	88 ea       	ldi	r24, 0xA8	; 168
 7f2:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(0x3F);
 7f6:	8f e3       	ldi	r24, 0x3F	; 63
 7f8:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_SETDISPLAYOFFSET);		// 0xD3
 7fc:	83 ed       	ldi	r24, 0xD3	; 211
 7fe:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(0x0);							// no offset
 802:	80 e0       	ldi	r24, 0x00	; 0
 804:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_SETSTARTLINE);			//line #0
 808:	80 e4       	ldi	r24, 0x40	; 64
 80a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_CHARGEPUMP);			// 0x8D
 80e:	8d e8       	ldi	r24, 0x8D	; 141
 810:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(0x14);							// using internal VCC
 814:	84 e1       	ldi	r24, 0x14	; 20
 816:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	//ssd1306_command(SSD1306_MEMORYMODE);			// 0x20
	//ssd1306_command(0x00);						// 0x00 horizontal addressing
	ssd1306_command(SSD1306_SEGREMAP | 0x1);		// rotate screen 180
 81a:	81 ea       	ldi	r24, 0xA1	; 161
 81c:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_COMSCANDEC);			// rotate screen 180
 820:	88 ec       	ldi	r24, 0xC8	; 200
 822:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_SETCOMPINS);			// 0xDA
 826:	8a ed       	ldi	r24, 0xDA	; 218
 828:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(0x12);
 82c:	82 e1       	ldi	r24, 0x12	; 18
 82e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_SETCONTRAST);			// 0x81
 832:	81 e8       	ldi	r24, 0x81	; 129
 834:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(0xCF);
 838:	8f ec       	ldi	r24, 0xCF	; 207
 83a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_SETPRECHARGE);			// 0xd9
 83e:	89 ed       	ldi	r24, 0xD9	; 217
 840:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(0xF1);
 844:	81 ef       	ldi	r24, 0xF1	; 241
 846:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_SETVCOMDETECT);			// 0xDB
 84a:	8b ed       	ldi	r24, 0xDB	; 219
 84c:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(0x40);
 850:	80 e4       	ldi	r24, 0x40	; 64
 852:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_DISPLAYALLON_RESUME);	// 0xA4
 856:	84 ea       	ldi	r24, 0xA4	; 164
 858:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_NORMALDISPLAY);			// 0xA6
 85c:	86 ea       	ldi	r24, 0xA6	; 166
 85e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
	ssd1306_command(SSD1306_DISPLAYON);				//switch on OLED
 862:	8f ea       	ldi	r24, 0xAF	; 175
 864:	0e 94 63 03 	call	0x6c6	; 0x6c6 <ssd1306_command>
 868:	08 95       	ret

0000086a <__floatunsisf>:
 86a:	e8 94       	clt
 86c:	09 c0       	rjmp	.+18     	; 0x880 <__floatsisf+0x12>

0000086e <__floatsisf>:
 86e:	97 fb       	bst	r25, 7
 870:	3e f4       	brtc	.+14     	; 0x880 <__floatsisf+0x12>
 872:	90 95       	com	r25
 874:	80 95       	com	r24
 876:	70 95       	com	r23
 878:	61 95       	neg	r22
 87a:	7f 4f       	sbci	r23, 0xFF	; 255
 87c:	8f 4f       	sbci	r24, 0xFF	; 255
 87e:	9f 4f       	sbci	r25, 0xFF	; 255
 880:	99 23       	and	r25, r25
 882:	a9 f0       	breq	.+42     	; 0x8ae <__floatsisf+0x40>
 884:	f9 2f       	mov	r31, r25
 886:	96 e9       	ldi	r25, 0x96	; 150
 888:	bb 27       	eor	r27, r27
 88a:	93 95       	inc	r25
 88c:	f6 95       	lsr	r31
 88e:	87 95       	ror	r24
 890:	77 95       	ror	r23
 892:	67 95       	ror	r22
 894:	b7 95       	ror	r27
 896:	f1 11       	cpse	r31, r1
 898:	f8 cf       	rjmp	.-16     	; 0x88a <__floatsisf+0x1c>
 89a:	fa f4       	brpl	.+62     	; 0x8da <__floatsisf+0x6c>
 89c:	bb 0f       	add	r27, r27
 89e:	11 f4       	brne	.+4      	; 0x8a4 <__floatsisf+0x36>
 8a0:	60 ff       	sbrs	r22, 0
 8a2:	1b c0       	rjmp	.+54     	; 0x8da <__floatsisf+0x6c>
 8a4:	6f 5f       	subi	r22, 0xFF	; 255
 8a6:	7f 4f       	sbci	r23, 0xFF	; 255
 8a8:	8f 4f       	sbci	r24, 0xFF	; 255
 8aa:	9f 4f       	sbci	r25, 0xFF	; 255
 8ac:	16 c0       	rjmp	.+44     	; 0x8da <__floatsisf+0x6c>
 8ae:	88 23       	and	r24, r24
 8b0:	11 f0       	breq	.+4      	; 0x8b6 <__floatsisf+0x48>
 8b2:	96 e9       	ldi	r25, 0x96	; 150
 8b4:	11 c0       	rjmp	.+34     	; 0x8d8 <__floatsisf+0x6a>
 8b6:	77 23       	and	r23, r23
 8b8:	21 f0       	breq	.+8      	; 0x8c2 <__floatsisf+0x54>
 8ba:	9e e8       	ldi	r25, 0x8E	; 142
 8bc:	87 2f       	mov	r24, r23
 8be:	76 2f       	mov	r23, r22
 8c0:	05 c0       	rjmp	.+10     	; 0x8cc <__floatsisf+0x5e>
 8c2:	66 23       	and	r22, r22
 8c4:	71 f0       	breq	.+28     	; 0x8e2 <__floatsisf+0x74>
 8c6:	96 e8       	ldi	r25, 0x86	; 134
 8c8:	86 2f       	mov	r24, r22
 8ca:	70 e0       	ldi	r23, 0x00	; 0
 8cc:	60 e0       	ldi	r22, 0x00	; 0
 8ce:	2a f0       	brmi	.+10     	; 0x8da <__floatsisf+0x6c>
 8d0:	9a 95       	dec	r25
 8d2:	66 0f       	add	r22, r22
 8d4:	77 1f       	adc	r23, r23
 8d6:	88 1f       	adc	r24, r24
 8d8:	da f7       	brpl	.-10     	; 0x8d0 <__floatsisf+0x62>
 8da:	88 0f       	add	r24, r24
 8dc:	96 95       	lsr	r25
 8de:	87 95       	ror	r24
 8e0:	97 f9       	bld	r25, 7
 8e2:	08 95       	ret

000008e4 <__udivmodhi4>:
 8e4:	aa 1b       	sub	r26, r26
 8e6:	bb 1b       	sub	r27, r27
 8e8:	51 e1       	ldi	r21, 0x11	; 17
 8ea:	07 c0       	rjmp	.+14     	; 0x8fa <__udivmodhi4_ep>

000008ec <__udivmodhi4_loop>:
 8ec:	aa 1f       	adc	r26, r26
 8ee:	bb 1f       	adc	r27, r27
 8f0:	a6 17       	cp	r26, r22
 8f2:	b7 07       	cpc	r27, r23
 8f4:	10 f0       	brcs	.+4      	; 0x8fa <__udivmodhi4_ep>
 8f6:	a6 1b       	sub	r26, r22
 8f8:	b7 0b       	sbc	r27, r23

000008fa <__udivmodhi4_ep>:
 8fa:	88 1f       	adc	r24, r24
 8fc:	99 1f       	adc	r25, r25
 8fe:	5a 95       	dec	r21
 900:	a9 f7       	brne	.-22     	; 0x8ec <__udivmodhi4_loop>
 902:	80 95       	com	r24
 904:	90 95       	com	r25
 906:	bc 01       	movw	r22, r24
 908:	cd 01       	movw	r24, r26
 90a:	08 95       	ret

0000090c <dtostrf>:
 90c:	ef 92       	push	r14
 90e:	0f 93       	push	r16
 910:	1f 93       	push	r17
 912:	cf 93       	push	r28
 914:	df 93       	push	r29
 916:	e8 01       	movw	r28, r16
 918:	47 fd       	sbrc	r20, 7
 91a:	02 c0       	rjmp	.+4      	; 0x920 <dtostrf+0x14>
 91c:	34 e0       	ldi	r19, 0x04	; 4
 91e:	01 c0       	rjmp	.+2      	; 0x922 <dtostrf+0x16>
 920:	34 e1       	ldi	r19, 0x14	; 20
 922:	04 2e       	mov	r0, r20
 924:	00 0c       	add	r0, r0
 926:	55 0b       	sbc	r21, r21
 928:	57 ff       	sbrs	r21, 7
 92a:	03 c0       	rjmp	.+6      	; 0x932 <dtostrf+0x26>
 92c:	51 95       	neg	r21
 92e:	41 95       	neg	r20
 930:	51 09       	sbc	r21, r1
 932:	e3 2e       	mov	r14, r19
 934:	02 2f       	mov	r16, r18
 936:	24 2f       	mov	r18, r20
 938:	ae 01       	movw	r20, r28
 93a:	0e 94 a6 04 	call	0x94c	; 0x94c <dtoa_prf>
 93e:	ce 01       	movw	r24, r28
 940:	df 91       	pop	r29
 942:	cf 91       	pop	r28
 944:	1f 91       	pop	r17
 946:	0f 91       	pop	r16
 948:	ef 90       	pop	r14
 94a:	08 95       	ret

0000094c <dtoa_prf>:
 94c:	a9 e0       	ldi	r26, 0x09	; 9
 94e:	b0 e0       	ldi	r27, 0x00	; 0
 950:	ec ea       	ldi	r30, 0xAC	; 172
 952:	f4 e0       	ldi	r31, 0x04	; 4
 954:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__prologue_saves__+0xc>
 958:	6a 01       	movw	r12, r20
 95a:	12 2f       	mov	r17, r18
 95c:	b0 2e       	mov	r11, r16
 95e:	2b e3       	ldi	r18, 0x3B	; 59
 960:	20 17       	cp	r18, r16
 962:	20 f0       	brcs	.+8      	; 0x96c <dtoa_prf+0x20>
 964:	ff 24       	eor	r15, r15
 966:	f3 94       	inc	r15
 968:	f0 0e       	add	r15, r16
 96a:	02 c0       	rjmp	.+4      	; 0x970 <dtoa_prf+0x24>
 96c:	2c e3       	ldi	r18, 0x3C	; 60
 96e:	f2 2e       	mov	r15, r18
 970:	0f 2d       	mov	r16, r15
 972:	27 e0       	ldi	r18, 0x07	; 7
 974:	ae 01       	movw	r20, r28
 976:	4f 5f       	subi	r20, 0xFF	; 255
 978:	5f 4f       	sbci	r21, 0xFF	; 255
 97a:	0e 94 00 06 	call	0xc00	; 0xc00 <__ftoa_engine>
 97e:	bc 01       	movw	r22, r24
 980:	49 81       	ldd	r20, Y+1	; 0x01
 982:	84 2f       	mov	r24, r20
 984:	89 70       	andi	r24, 0x09	; 9
 986:	81 30       	cpi	r24, 0x01	; 1
 988:	31 f0       	breq	.+12     	; 0x996 <dtoa_prf+0x4a>
 98a:	e1 fc       	sbrc	r14, 1
 98c:	06 c0       	rjmp	.+12     	; 0x99a <dtoa_prf+0x4e>
 98e:	e0 fe       	sbrs	r14, 0
 990:	06 c0       	rjmp	.+12     	; 0x99e <dtoa_prf+0x52>
 992:	90 e2       	ldi	r25, 0x20	; 32
 994:	05 c0       	rjmp	.+10     	; 0x9a0 <dtoa_prf+0x54>
 996:	9d e2       	ldi	r25, 0x2D	; 45
 998:	03 c0       	rjmp	.+6      	; 0x9a0 <dtoa_prf+0x54>
 99a:	9b e2       	ldi	r25, 0x2B	; 43
 99c:	01 c0       	rjmp	.+2      	; 0x9a0 <dtoa_prf+0x54>
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	5e 2d       	mov	r21, r14
 9a2:	50 71       	andi	r21, 0x10	; 16
 9a4:	43 ff       	sbrs	r20, 3
 9a6:	3c c0       	rjmp	.+120    	; 0xa20 <dtoa_prf+0xd4>
 9a8:	91 11       	cpse	r25, r1
 9aa:	02 c0       	rjmp	.+4      	; 0x9b0 <dtoa_prf+0x64>
 9ac:	83 e0       	ldi	r24, 0x03	; 3
 9ae:	01 c0       	rjmp	.+2      	; 0x9b2 <dtoa_prf+0x66>
 9b0:	84 e0       	ldi	r24, 0x04	; 4
 9b2:	81 17       	cp	r24, r17
 9b4:	18 f4       	brcc	.+6      	; 0x9bc <dtoa_prf+0x70>
 9b6:	21 2f       	mov	r18, r17
 9b8:	28 1b       	sub	r18, r24
 9ba:	01 c0       	rjmp	.+2      	; 0x9be <dtoa_prf+0x72>
 9bc:	20 e0       	ldi	r18, 0x00	; 0
 9be:	51 11       	cpse	r21, r1
 9c0:	0b c0       	rjmp	.+22     	; 0x9d8 <dtoa_prf+0x8c>
 9c2:	f6 01       	movw	r30, r12
 9c4:	82 2f       	mov	r24, r18
 9c6:	30 e2       	ldi	r19, 0x20	; 32
 9c8:	88 23       	and	r24, r24
 9ca:	19 f0       	breq	.+6      	; 0x9d2 <dtoa_prf+0x86>
 9cc:	31 93       	st	Z+, r19
 9ce:	81 50       	subi	r24, 0x01	; 1
 9d0:	fb cf       	rjmp	.-10     	; 0x9c8 <dtoa_prf+0x7c>
 9d2:	c2 0e       	add	r12, r18
 9d4:	d1 1c       	adc	r13, r1
 9d6:	20 e0       	ldi	r18, 0x00	; 0
 9d8:	99 23       	and	r25, r25
 9da:	29 f0       	breq	.+10     	; 0x9e6 <dtoa_prf+0x9a>
 9dc:	d6 01       	movw	r26, r12
 9de:	9c 93       	st	X, r25
 9e0:	f6 01       	movw	r30, r12
 9e2:	31 96       	adiw	r30, 0x01	; 1
 9e4:	6f 01       	movw	r12, r30
 9e6:	c6 01       	movw	r24, r12
 9e8:	03 96       	adiw	r24, 0x03	; 3
 9ea:	e2 fe       	sbrs	r14, 2
 9ec:	0a c0       	rjmp	.+20     	; 0xa02 <dtoa_prf+0xb6>
 9ee:	3e e4       	ldi	r19, 0x4E	; 78
 9f0:	d6 01       	movw	r26, r12
 9f2:	3c 93       	st	X, r19
 9f4:	41 e4       	ldi	r20, 0x41	; 65
 9f6:	11 96       	adiw	r26, 0x01	; 1
 9f8:	4c 93       	st	X, r20
 9fa:	11 97       	sbiw	r26, 0x01	; 1
 9fc:	12 96       	adiw	r26, 0x02	; 2
 9fe:	3c 93       	st	X, r19
 a00:	06 c0       	rjmp	.+12     	; 0xa0e <dtoa_prf+0xc2>
 a02:	3e e6       	ldi	r19, 0x6E	; 110
 a04:	f6 01       	movw	r30, r12
 a06:	30 83       	st	Z, r19
 a08:	41 e6       	ldi	r20, 0x61	; 97
 a0a:	41 83       	std	Z+1, r20	; 0x01
 a0c:	32 83       	std	Z+2, r19	; 0x02
 a0e:	fc 01       	movw	r30, r24
 a10:	32 2f       	mov	r19, r18
 a12:	40 e2       	ldi	r20, 0x20	; 32
 a14:	33 23       	and	r19, r19
 a16:	09 f4       	brne	.+2      	; 0xa1a <dtoa_prf+0xce>
 a18:	42 c0       	rjmp	.+132    	; 0xa9e <dtoa_prf+0x152>
 a1a:	41 93       	st	Z+, r20
 a1c:	31 50       	subi	r19, 0x01	; 1
 a1e:	fa cf       	rjmp	.-12     	; 0xa14 <dtoa_prf+0xc8>
 a20:	42 ff       	sbrs	r20, 2
 a22:	44 c0       	rjmp	.+136    	; 0xaac <dtoa_prf+0x160>
 a24:	91 11       	cpse	r25, r1
 a26:	02 c0       	rjmp	.+4      	; 0xa2c <dtoa_prf+0xe0>
 a28:	83 e0       	ldi	r24, 0x03	; 3
 a2a:	01 c0       	rjmp	.+2      	; 0xa2e <dtoa_prf+0xe2>
 a2c:	84 e0       	ldi	r24, 0x04	; 4
 a2e:	81 17       	cp	r24, r17
 a30:	18 f4       	brcc	.+6      	; 0xa38 <dtoa_prf+0xec>
 a32:	21 2f       	mov	r18, r17
 a34:	28 1b       	sub	r18, r24
 a36:	01 c0       	rjmp	.+2      	; 0xa3a <dtoa_prf+0xee>
 a38:	20 e0       	ldi	r18, 0x00	; 0
 a3a:	51 11       	cpse	r21, r1
 a3c:	0b c0       	rjmp	.+22     	; 0xa54 <dtoa_prf+0x108>
 a3e:	f6 01       	movw	r30, r12
 a40:	82 2f       	mov	r24, r18
 a42:	30 e2       	ldi	r19, 0x20	; 32
 a44:	88 23       	and	r24, r24
 a46:	19 f0       	breq	.+6      	; 0xa4e <dtoa_prf+0x102>
 a48:	31 93       	st	Z+, r19
 a4a:	81 50       	subi	r24, 0x01	; 1
 a4c:	fb cf       	rjmp	.-10     	; 0xa44 <dtoa_prf+0xf8>
 a4e:	c2 0e       	add	r12, r18
 a50:	d1 1c       	adc	r13, r1
 a52:	20 e0       	ldi	r18, 0x00	; 0
 a54:	99 23       	and	r25, r25
 a56:	29 f0       	breq	.+10     	; 0xa62 <dtoa_prf+0x116>
 a58:	d6 01       	movw	r26, r12
 a5a:	9c 93       	st	X, r25
 a5c:	f6 01       	movw	r30, r12
 a5e:	31 96       	adiw	r30, 0x01	; 1
 a60:	6f 01       	movw	r12, r30
 a62:	c6 01       	movw	r24, r12
 a64:	03 96       	adiw	r24, 0x03	; 3
 a66:	e2 fe       	sbrs	r14, 2
 a68:	0b c0       	rjmp	.+22     	; 0xa80 <dtoa_prf+0x134>
 a6a:	39 e4       	ldi	r19, 0x49	; 73
 a6c:	d6 01       	movw	r26, r12
 a6e:	3c 93       	st	X, r19
 a70:	3e e4       	ldi	r19, 0x4E	; 78
 a72:	11 96       	adiw	r26, 0x01	; 1
 a74:	3c 93       	st	X, r19
 a76:	11 97       	sbiw	r26, 0x01	; 1
 a78:	36 e4       	ldi	r19, 0x46	; 70
 a7a:	12 96       	adiw	r26, 0x02	; 2
 a7c:	3c 93       	st	X, r19
 a7e:	07 c0       	rjmp	.+14     	; 0xa8e <dtoa_prf+0x142>
 a80:	39 e6       	ldi	r19, 0x69	; 105
 a82:	f6 01       	movw	r30, r12
 a84:	30 83       	st	Z, r19
 a86:	3e e6       	ldi	r19, 0x6E	; 110
 a88:	31 83       	std	Z+1, r19	; 0x01
 a8a:	36 e6       	ldi	r19, 0x66	; 102
 a8c:	32 83       	std	Z+2, r19	; 0x02
 a8e:	fc 01       	movw	r30, r24
 a90:	32 2f       	mov	r19, r18
 a92:	40 e2       	ldi	r20, 0x20	; 32
 a94:	33 23       	and	r19, r19
 a96:	19 f0       	breq	.+6      	; 0xa9e <dtoa_prf+0x152>
 a98:	41 93       	st	Z+, r20
 a9a:	31 50       	subi	r19, 0x01	; 1
 a9c:	fb cf       	rjmp	.-10     	; 0xa94 <dtoa_prf+0x148>
 a9e:	fc 01       	movw	r30, r24
 aa0:	e2 0f       	add	r30, r18
 aa2:	f1 1d       	adc	r31, r1
 aa4:	10 82       	st	Z, r1
 aa6:	8e ef       	ldi	r24, 0xFE	; 254
 aa8:	9f ef       	ldi	r25, 0xFF	; 255
 aaa:	a6 c0       	rjmp	.+332    	; 0xbf8 <dtoa_prf+0x2ac>
 aac:	21 e0       	ldi	r18, 0x01	; 1
 aae:	30 e0       	ldi	r19, 0x00	; 0
 ab0:	91 11       	cpse	r25, r1
 ab2:	02 c0       	rjmp	.+4      	; 0xab8 <dtoa_prf+0x16c>
 ab4:	20 e0       	ldi	r18, 0x00	; 0
 ab6:	30 e0       	ldi	r19, 0x00	; 0
 ab8:	16 16       	cp	r1, r22
 aba:	17 06       	cpc	r1, r23
 abc:	1c f4       	brge	.+6      	; 0xac4 <dtoa_prf+0x178>
 abe:	fb 01       	movw	r30, r22
 ac0:	31 96       	adiw	r30, 0x01	; 1
 ac2:	02 c0       	rjmp	.+4      	; 0xac8 <dtoa_prf+0x17c>
 ac4:	e1 e0       	ldi	r30, 0x01	; 1
 ac6:	f0 e0       	ldi	r31, 0x00	; 0
 ac8:	2e 0f       	add	r18, r30
 aca:	3f 1f       	adc	r19, r31
 acc:	bb 20       	and	r11, r11
 ace:	21 f0       	breq	.+8      	; 0xad8 <dtoa_prf+0x18c>
 ad0:	eb 2d       	mov	r30, r11
 ad2:	f0 e0       	ldi	r31, 0x00	; 0
 ad4:	31 96       	adiw	r30, 0x01	; 1
 ad6:	02 c0       	rjmp	.+4      	; 0xadc <dtoa_prf+0x190>
 ad8:	e0 e0       	ldi	r30, 0x00	; 0
 ada:	f0 e0       	ldi	r31, 0x00	; 0
 adc:	2e 0f       	add	r18, r30
 ade:	3f 1f       	adc	r19, r31
 ae0:	e1 2f       	mov	r30, r17
 ae2:	f0 e0       	ldi	r31, 0x00	; 0
 ae4:	2e 17       	cp	r18, r30
 ae6:	3f 07       	cpc	r19, r31
 ae8:	1c f4       	brge	.+6      	; 0xaf0 <dtoa_prf+0x1a4>
 aea:	12 1b       	sub	r17, r18
 aec:	21 2f       	mov	r18, r17
 aee:	01 c0       	rjmp	.+2      	; 0xaf2 <dtoa_prf+0x1a6>
 af0:	20 e0       	ldi	r18, 0x00	; 0
 af2:	8e 2d       	mov	r24, r14
 af4:	88 71       	andi	r24, 0x18	; 24
 af6:	59 f4       	brne	.+22     	; 0xb0e <dtoa_prf+0x1c2>
 af8:	f6 01       	movw	r30, r12
 afa:	82 2f       	mov	r24, r18
 afc:	30 e2       	ldi	r19, 0x20	; 32
 afe:	88 23       	and	r24, r24
 b00:	19 f0       	breq	.+6      	; 0xb08 <dtoa_prf+0x1bc>
 b02:	31 93       	st	Z+, r19
 b04:	81 50       	subi	r24, 0x01	; 1
 b06:	fb cf       	rjmp	.-10     	; 0xafe <dtoa_prf+0x1b2>
 b08:	c2 0e       	add	r12, r18
 b0a:	d1 1c       	adc	r13, r1
 b0c:	20 e0       	ldi	r18, 0x00	; 0
 b0e:	99 23       	and	r25, r25
 b10:	29 f0       	breq	.+10     	; 0xb1c <dtoa_prf+0x1d0>
 b12:	d6 01       	movw	r26, r12
 b14:	9c 93       	st	X, r25
 b16:	f6 01       	movw	r30, r12
 b18:	31 96       	adiw	r30, 0x01	; 1
 b1a:	6f 01       	movw	r12, r30
 b1c:	51 11       	cpse	r21, r1
 b1e:	0b c0       	rjmp	.+22     	; 0xb36 <dtoa_prf+0x1ea>
 b20:	f6 01       	movw	r30, r12
 b22:	82 2f       	mov	r24, r18
 b24:	90 e3       	ldi	r25, 0x30	; 48
 b26:	88 23       	and	r24, r24
 b28:	19 f0       	breq	.+6      	; 0xb30 <dtoa_prf+0x1e4>
 b2a:	91 93       	st	Z+, r25
 b2c:	81 50       	subi	r24, 0x01	; 1
 b2e:	fb cf       	rjmp	.-10     	; 0xb26 <dtoa_prf+0x1da>
 b30:	c2 0e       	add	r12, r18
 b32:	d1 1c       	adc	r13, r1
 b34:	20 e0       	ldi	r18, 0x00	; 0
 b36:	0f 2d       	mov	r16, r15
 b38:	06 0f       	add	r16, r22
 b3a:	9a 81       	ldd	r25, Y+2	; 0x02
 b3c:	34 2f       	mov	r19, r20
 b3e:	30 71       	andi	r19, 0x10	; 16
 b40:	44 ff       	sbrs	r20, 4
 b42:	03 c0       	rjmp	.+6      	; 0xb4a <dtoa_prf+0x1fe>
 b44:	91 33       	cpi	r25, 0x31	; 49
 b46:	09 f4       	brne	.+2      	; 0xb4a <dtoa_prf+0x1fe>
 b48:	01 50       	subi	r16, 0x01	; 1
 b4a:	10 16       	cp	r1, r16
 b4c:	24 f4       	brge	.+8      	; 0xb56 <dtoa_prf+0x20a>
 b4e:	09 30       	cpi	r16, 0x09	; 9
 b50:	18 f0       	brcs	.+6      	; 0xb58 <dtoa_prf+0x20c>
 b52:	08 e0       	ldi	r16, 0x08	; 8
 b54:	01 c0       	rjmp	.+2      	; 0xb58 <dtoa_prf+0x20c>
 b56:	01 e0       	ldi	r16, 0x01	; 1
 b58:	ab 01       	movw	r20, r22
 b5a:	77 ff       	sbrs	r23, 7
 b5c:	02 c0       	rjmp	.+4      	; 0xb62 <dtoa_prf+0x216>
 b5e:	40 e0       	ldi	r20, 0x00	; 0
 b60:	50 e0       	ldi	r21, 0x00	; 0
 b62:	fb 01       	movw	r30, r22
 b64:	e4 1b       	sub	r30, r20
 b66:	f5 0b       	sbc	r31, r21
 b68:	a1 e0       	ldi	r26, 0x01	; 1
 b6a:	b0 e0       	ldi	r27, 0x00	; 0
 b6c:	ac 0f       	add	r26, r28
 b6e:	bd 1f       	adc	r27, r29
 b70:	ea 0f       	add	r30, r26
 b72:	fb 1f       	adc	r31, r27
 b74:	8e e2       	ldi	r24, 0x2E	; 46
 b76:	a8 2e       	mov	r10, r24
 b78:	4b 01       	movw	r8, r22
 b7a:	80 1a       	sub	r8, r16
 b7c:	91 08       	sbc	r9, r1
 b7e:	0b 2d       	mov	r16, r11
 b80:	10 e0       	ldi	r17, 0x00	; 0
 b82:	11 95       	neg	r17
 b84:	01 95       	neg	r16
 b86:	11 09       	sbc	r17, r1
 b88:	4f 3f       	cpi	r20, 0xFF	; 255
 b8a:	bf ef       	ldi	r27, 0xFF	; 255
 b8c:	5b 07       	cpc	r21, r27
 b8e:	21 f4       	brne	.+8      	; 0xb98 <dtoa_prf+0x24c>
 b90:	d6 01       	movw	r26, r12
 b92:	ac 92       	st	X, r10
 b94:	11 96       	adiw	r26, 0x01	; 1
 b96:	6d 01       	movw	r12, r26
 b98:	64 17       	cp	r22, r20
 b9a:	75 07       	cpc	r23, r21
 b9c:	2c f0       	brlt	.+10     	; 0xba8 <dtoa_prf+0x25c>
 b9e:	84 16       	cp	r8, r20
 ba0:	95 06       	cpc	r9, r21
 ba2:	14 f4       	brge	.+4      	; 0xba8 <dtoa_prf+0x25c>
 ba4:	81 81       	ldd	r24, Z+1	; 0x01
 ba6:	01 c0       	rjmp	.+2      	; 0xbaa <dtoa_prf+0x25e>
 ba8:	80 e3       	ldi	r24, 0x30	; 48
 baa:	41 50       	subi	r20, 0x01	; 1
 bac:	51 09       	sbc	r21, r1
 bae:	31 96       	adiw	r30, 0x01	; 1
 bb0:	d6 01       	movw	r26, r12
 bb2:	11 96       	adiw	r26, 0x01	; 1
 bb4:	7d 01       	movw	r14, r26
 bb6:	40 17       	cp	r20, r16
 bb8:	51 07       	cpc	r21, r17
 bba:	24 f0       	brlt	.+8      	; 0xbc4 <dtoa_prf+0x278>
 bbc:	d6 01       	movw	r26, r12
 bbe:	8c 93       	st	X, r24
 bc0:	67 01       	movw	r12, r14
 bc2:	e2 cf       	rjmp	.-60     	; 0xb88 <dtoa_prf+0x23c>
 bc4:	64 17       	cp	r22, r20
 bc6:	75 07       	cpc	r23, r21
 bc8:	39 f4       	brne	.+14     	; 0xbd8 <dtoa_prf+0x28c>
 bca:	96 33       	cpi	r25, 0x36	; 54
 bcc:	20 f4       	brcc	.+8      	; 0xbd6 <dtoa_prf+0x28a>
 bce:	95 33       	cpi	r25, 0x35	; 53
 bd0:	19 f4       	brne	.+6      	; 0xbd8 <dtoa_prf+0x28c>
 bd2:	31 11       	cpse	r19, r1
 bd4:	01 c0       	rjmp	.+2      	; 0xbd8 <dtoa_prf+0x28c>
 bd6:	81 e3       	ldi	r24, 0x31	; 49
 bd8:	f6 01       	movw	r30, r12
 bda:	80 83       	st	Z, r24
 bdc:	f7 01       	movw	r30, r14
 bde:	82 2f       	mov	r24, r18
 be0:	90 e2       	ldi	r25, 0x20	; 32
 be2:	88 23       	and	r24, r24
 be4:	19 f0       	breq	.+6      	; 0xbec <dtoa_prf+0x2a0>
 be6:	91 93       	st	Z+, r25
 be8:	81 50       	subi	r24, 0x01	; 1
 bea:	fb cf       	rjmp	.-10     	; 0xbe2 <dtoa_prf+0x296>
 bec:	f7 01       	movw	r30, r14
 bee:	e2 0f       	add	r30, r18
 bf0:	f1 1d       	adc	r31, r1
 bf2:	10 82       	st	Z, r1
 bf4:	80 e0       	ldi	r24, 0x00	; 0
 bf6:	90 e0       	ldi	r25, 0x00	; 0
 bf8:	29 96       	adiw	r28, 0x09	; 9
 bfa:	ec e0       	ldi	r30, 0x0C	; 12
 bfc:	0c 94 fa 06 	jmp	0xdf4	; 0xdf4 <__epilogue_restores__+0xc>

00000c00 <__ftoa_engine>:
 c00:	28 30       	cpi	r18, 0x08	; 8
 c02:	08 f0       	brcs	.+2      	; 0xc06 <__ftoa_engine+0x6>
 c04:	27 e0       	ldi	r18, 0x07	; 7
 c06:	33 27       	eor	r19, r19
 c08:	da 01       	movw	r26, r20
 c0a:	99 0f       	add	r25, r25
 c0c:	31 1d       	adc	r19, r1
 c0e:	87 fd       	sbrc	r24, 7
 c10:	91 60       	ori	r25, 0x01	; 1
 c12:	00 96       	adiw	r24, 0x00	; 0
 c14:	61 05       	cpc	r22, r1
 c16:	71 05       	cpc	r23, r1
 c18:	39 f4       	brne	.+14     	; 0xc28 <__ftoa_engine+0x28>
 c1a:	32 60       	ori	r19, 0x02	; 2
 c1c:	2e 5f       	subi	r18, 0xFE	; 254
 c1e:	3d 93       	st	X+, r19
 c20:	30 e3       	ldi	r19, 0x30	; 48
 c22:	2a 95       	dec	r18
 c24:	e1 f7       	brne	.-8      	; 0xc1e <__ftoa_engine+0x1e>
 c26:	08 95       	ret
 c28:	9f 3f       	cpi	r25, 0xFF	; 255
 c2a:	30 f0       	brcs	.+12     	; 0xc38 <__ftoa_engine+0x38>
 c2c:	80 38       	cpi	r24, 0x80	; 128
 c2e:	71 05       	cpc	r23, r1
 c30:	61 05       	cpc	r22, r1
 c32:	09 f0       	breq	.+2      	; 0xc36 <__ftoa_engine+0x36>
 c34:	3c 5f       	subi	r19, 0xFC	; 252
 c36:	3c 5f       	subi	r19, 0xFC	; 252
 c38:	3d 93       	st	X+, r19
 c3a:	91 30       	cpi	r25, 0x01	; 1
 c3c:	08 f0       	brcs	.+2      	; 0xc40 <__ftoa_engine+0x40>
 c3e:	80 68       	ori	r24, 0x80	; 128
 c40:	91 1d       	adc	r25, r1
 c42:	df 93       	push	r29
 c44:	cf 93       	push	r28
 c46:	1f 93       	push	r17
 c48:	0f 93       	push	r16
 c4a:	ff 92       	push	r15
 c4c:	ef 92       	push	r14
 c4e:	19 2f       	mov	r17, r25
 c50:	98 7f       	andi	r25, 0xF8	; 248
 c52:	96 95       	lsr	r25
 c54:	e9 2f       	mov	r30, r25
 c56:	96 95       	lsr	r25
 c58:	96 95       	lsr	r25
 c5a:	e9 0f       	add	r30, r25
 c5c:	ff 27       	eor	r31, r31
 c5e:	ee 53       	subi	r30, 0x3E	; 62
 c60:	ff 4f       	sbci	r31, 0xFF	; 255
 c62:	99 27       	eor	r25, r25
 c64:	33 27       	eor	r19, r19
 c66:	ee 24       	eor	r14, r14
 c68:	ff 24       	eor	r15, r15
 c6a:	a7 01       	movw	r20, r14
 c6c:	e7 01       	movw	r28, r14
 c6e:	05 90       	lpm	r0, Z+
 c70:	08 94       	sec
 c72:	07 94       	ror	r0
 c74:	28 f4       	brcc	.+10     	; 0xc80 <__ftoa_engine+0x80>
 c76:	36 0f       	add	r19, r22
 c78:	e7 1e       	adc	r14, r23
 c7a:	f8 1e       	adc	r15, r24
 c7c:	49 1f       	adc	r20, r25
 c7e:	51 1d       	adc	r21, r1
 c80:	66 0f       	add	r22, r22
 c82:	77 1f       	adc	r23, r23
 c84:	88 1f       	adc	r24, r24
 c86:	99 1f       	adc	r25, r25
 c88:	06 94       	lsr	r0
 c8a:	a1 f7       	brne	.-24     	; 0xc74 <__ftoa_engine+0x74>
 c8c:	05 90       	lpm	r0, Z+
 c8e:	07 94       	ror	r0
 c90:	28 f4       	brcc	.+10     	; 0xc9c <__ftoa_engine+0x9c>
 c92:	e7 0e       	add	r14, r23
 c94:	f8 1e       	adc	r15, r24
 c96:	49 1f       	adc	r20, r25
 c98:	56 1f       	adc	r21, r22
 c9a:	c1 1d       	adc	r28, r1
 c9c:	77 0f       	add	r23, r23
 c9e:	88 1f       	adc	r24, r24
 ca0:	99 1f       	adc	r25, r25
 ca2:	66 1f       	adc	r22, r22
 ca4:	06 94       	lsr	r0
 ca6:	a1 f7       	brne	.-24     	; 0xc90 <__ftoa_engine+0x90>
 ca8:	05 90       	lpm	r0, Z+
 caa:	07 94       	ror	r0
 cac:	28 f4       	brcc	.+10     	; 0xcb8 <__ftoa_engine+0xb8>
 cae:	f8 0e       	add	r15, r24
 cb0:	49 1f       	adc	r20, r25
 cb2:	56 1f       	adc	r21, r22
 cb4:	c7 1f       	adc	r28, r23
 cb6:	d1 1d       	adc	r29, r1
 cb8:	88 0f       	add	r24, r24
 cba:	99 1f       	adc	r25, r25
 cbc:	66 1f       	adc	r22, r22
 cbe:	77 1f       	adc	r23, r23
 cc0:	06 94       	lsr	r0
 cc2:	a1 f7       	brne	.-24     	; 0xcac <__ftoa_engine+0xac>
 cc4:	05 90       	lpm	r0, Z+
 cc6:	07 94       	ror	r0
 cc8:	20 f4       	brcc	.+8      	; 0xcd2 <__ftoa_engine+0xd2>
 cca:	49 0f       	add	r20, r25
 ccc:	56 1f       	adc	r21, r22
 cce:	c7 1f       	adc	r28, r23
 cd0:	d8 1f       	adc	r29, r24
 cd2:	99 0f       	add	r25, r25
 cd4:	66 1f       	adc	r22, r22
 cd6:	77 1f       	adc	r23, r23
 cd8:	88 1f       	adc	r24, r24
 cda:	06 94       	lsr	r0
 cdc:	a9 f7       	brne	.-22     	; 0xcc8 <__ftoa_engine+0xc8>
 cde:	84 91       	lpm	r24, Z
 ce0:	10 95       	com	r17
 ce2:	17 70       	andi	r17, 0x07	; 7
 ce4:	41 f0       	breq	.+16     	; 0xcf6 <__ftoa_engine+0xf6>
 ce6:	d6 95       	lsr	r29
 ce8:	c7 95       	ror	r28
 cea:	57 95       	ror	r21
 cec:	47 95       	ror	r20
 cee:	f7 94       	ror	r15
 cf0:	e7 94       	ror	r14
 cf2:	1a 95       	dec	r17
 cf4:	c1 f7       	brne	.-16     	; 0xce6 <__ftoa_engine+0xe6>
 cf6:	e8 e6       	ldi	r30, 0x68	; 104
 cf8:	f0 e0       	ldi	r31, 0x00	; 0
 cfa:	68 94       	set
 cfc:	15 90       	lpm	r1, Z+
 cfe:	15 91       	lpm	r17, Z+
 d00:	35 91       	lpm	r19, Z+
 d02:	65 91       	lpm	r22, Z+
 d04:	95 91       	lpm	r25, Z+
 d06:	05 90       	lpm	r0, Z+
 d08:	7f e2       	ldi	r23, 0x2F	; 47
 d0a:	73 95       	inc	r23
 d0c:	e1 18       	sub	r14, r1
 d0e:	f1 0a       	sbc	r15, r17
 d10:	43 0b       	sbc	r20, r19
 d12:	56 0b       	sbc	r21, r22
 d14:	c9 0b       	sbc	r28, r25
 d16:	d0 09       	sbc	r29, r0
 d18:	c0 f7       	brcc	.-16     	; 0xd0a <__ftoa_engine+0x10a>
 d1a:	e1 0c       	add	r14, r1
 d1c:	f1 1e       	adc	r15, r17
 d1e:	43 1f       	adc	r20, r19
 d20:	56 1f       	adc	r21, r22
 d22:	c9 1f       	adc	r28, r25
 d24:	d0 1d       	adc	r29, r0
 d26:	7e f4       	brtc	.+30     	; 0xd46 <__ftoa_engine+0x146>
 d28:	70 33       	cpi	r23, 0x30	; 48
 d2a:	11 f4       	brne	.+4      	; 0xd30 <__ftoa_engine+0x130>
 d2c:	8a 95       	dec	r24
 d2e:	e6 cf       	rjmp	.-52     	; 0xcfc <__ftoa_engine+0xfc>
 d30:	e8 94       	clt
 d32:	01 50       	subi	r16, 0x01	; 1
 d34:	30 f0       	brcs	.+12     	; 0xd42 <__ftoa_engine+0x142>
 d36:	08 0f       	add	r16, r24
 d38:	0a f4       	brpl	.+2      	; 0xd3c <__ftoa_engine+0x13c>
 d3a:	00 27       	eor	r16, r16
 d3c:	02 17       	cp	r16, r18
 d3e:	08 f4       	brcc	.+2      	; 0xd42 <__ftoa_engine+0x142>
 d40:	20 2f       	mov	r18, r16
 d42:	23 95       	inc	r18
 d44:	02 2f       	mov	r16, r18
 d46:	7a 33       	cpi	r23, 0x3A	; 58
 d48:	28 f0       	brcs	.+10     	; 0xd54 <__ftoa_engine+0x154>
 d4a:	79 e3       	ldi	r23, 0x39	; 57
 d4c:	7d 93       	st	X+, r23
 d4e:	2a 95       	dec	r18
 d50:	e9 f7       	brne	.-6      	; 0xd4c <__ftoa_engine+0x14c>
 d52:	10 c0       	rjmp	.+32     	; 0xd74 <__ftoa_engine+0x174>
 d54:	7d 93       	st	X+, r23
 d56:	2a 95       	dec	r18
 d58:	89 f6       	brne	.-94     	; 0xcfc <__ftoa_engine+0xfc>
 d5a:	06 94       	lsr	r0
 d5c:	97 95       	ror	r25
 d5e:	67 95       	ror	r22
 d60:	37 95       	ror	r19
 d62:	17 95       	ror	r17
 d64:	17 94       	ror	r1
 d66:	e1 18       	sub	r14, r1
 d68:	f1 0a       	sbc	r15, r17
 d6a:	43 0b       	sbc	r20, r19
 d6c:	56 0b       	sbc	r21, r22
 d6e:	c9 0b       	sbc	r28, r25
 d70:	d0 09       	sbc	r29, r0
 d72:	98 f0       	brcs	.+38     	; 0xd9a <__ftoa_engine+0x19a>
 d74:	23 95       	inc	r18
 d76:	7e 91       	ld	r23, -X
 d78:	73 95       	inc	r23
 d7a:	7a 33       	cpi	r23, 0x3A	; 58
 d7c:	08 f0       	brcs	.+2      	; 0xd80 <__ftoa_engine+0x180>
 d7e:	70 e3       	ldi	r23, 0x30	; 48
 d80:	7c 93       	st	X, r23
 d82:	20 13       	cpse	r18, r16
 d84:	b8 f7       	brcc	.-18     	; 0xd74 <__ftoa_engine+0x174>
 d86:	7e 91       	ld	r23, -X
 d88:	70 61       	ori	r23, 0x10	; 16
 d8a:	7d 93       	st	X+, r23
 d8c:	30 f0       	brcs	.+12     	; 0xd9a <__ftoa_engine+0x19a>
 d8e:	83 95       	inc	r24
 d90:	71 e3       	ldi	r23, 0x31	; 49
 d92:	7d 93       	st	X+, r23
 d94:	70 e3       	ldi	r23, 0x30	; 48
 d96:	2a 95       	dec	r18
 d98:	e1 f7       	brne	.-8      	; 0xd92 <__ftoa_engine+0x192>
 d9a:	11 24       	eor	r1, r1
 d9c:	ef 90       	pop	r14
 d9e:	ff 90       	pop	r15
 da0:	0f 91       	pop	r16
 da2:	1f 91       	pop	r17
 da4:	cf 91       	pop	r28
 da6:	df 91       	pop	r29
 da8:	99 27       	eor	r25, r25
 daa:	87 fd       	sbrc	r24, 7
 dac:	90 95       	com	r25
 dae:	08 95       	ret

00000db0 <__prologue_saves__>:
 db0:	2f 92       	push	r2
 db2:	3f 92       	push	r3
 db4:	4f 92       	push	r4
 db6:	5f 92       	push	r5
 db8:	6f 92       	push	r6
 dba:	7f 92       	push	r7
 dbc:	8f 92       	push	r8
 dbe:	9f 92       	push	r9
 dc0:	af 92       	push	r10
 dc2:	bf 92       	push	r11
 dc4:	cf 92       	push	r12
 dc6:	df 92       	push	r13
 dc8:	ef 92       	push	r14
 dca:	ff 92       	push	r15
 dcc:	0f 93       	push	r16
 dce:	1f 93       	push	r17
 dd0:	cf 93       	push	r28
 dd2:	df 93       	push	r29
 dd4:	cd b7       	in	r28, 0x3d	; 61
 dd6:	de b7       	in	r29, 0x3e	; 62
 dd8:	ca 1b       	sub	r28, r26
 dda:	db 0b       	sbc	r29, r27
 ddc:	0f b6       	in	r0, 0x3f	; 63
 dde:	f8 94       	cli
 de0:	de bf       	out	0x3e, r29	; 62
 de2:	0f be       	out	0x3f, r0	; 63
 de4:	cd bf       	out	0x3d, r28	; 61
 de6:	09 94       	ijmp

00000de8 <__epilogue_restores__>:
 de8:	2a 88       	ldd	r2, Y+18	; 0x12
 dea:	39 88       	ldd	r3, Y+17	; 0x11
 dec:	48 88       	ldd	r4, Y+16	; 0x10
 dee:	5f 84       	ldd	r5, Y+15	; 0x0f
 df0:	6e 84       	ldd	r6, Y+14	; 0x0e
 df2:	7d 84       	ldd	r7, Y+13	; 0x0d
 df4:	8c 84       	ldd	r8, Y+12	; 0x0c
 df6:	9b 84       	ldd	r9, Y+11	; 0x0b
 df8:	aa 84       	ldd	r10, Y+10	; 0x0a
 dfa:	b9 84       	ldd	r11, Y+9	; 0x09
 dfc:	c8 84       	ldd	r12, Y+8	; 0x08
 dfe:	df 80       	ldd	r13, Y+7	; 0x07
 e00:	ee 80       	ldd	r14, Y+6	; 0x06
 e02:	fd 80       	ldd	r15, Y+5	; 0x05
 e04:	0c 81       	ldd	r16, Y+4	; 0x04
 e06:	1b 81       	ldd	r17, Y+3	; 0x03
 e08:	aa 81       	ldd	r26, Y+2	; 0x02
 e0a:	b9 81       	ldd	r27, Y+1	; 0x01
 e0c:	ce 0f       	add	r28, r30
 e0e:	d1 1d       	adc	r29, r1
 e10:	0f b6       	in	r0, 0x3f	; 63
 e12:	f8 94       	cli
 e14:	de bf       	out	0x3e, r29	; 62
 e16:	0f be       	out	0x3f, r0	; 63
 e18:	cd bf       	out	0x3d, r28	; 61
 e1a:	ed 01       	movw	r28, r26
 e1c:	08 95       	ret

00000e1e <_exit>:
 e1e:	f8 94       	cli

00000e20 <__stop_program>:
 e20:	ff cf       	rjmp	.-2      	; 0xe20 <__stop_program>
